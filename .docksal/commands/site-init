#!/usr/bin/env bash

#: exec_target = cli

## Install drupal site.

set -e  # Abort if anything fails

#-------------------------- Helper functions --------------------------------

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

# PROJECT_ROOT and DOCROOT are set as env variables in cli
SITE_DIRECTORY="default"
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"

# site install
site_install() {
  local_dump_file="${PROJECT_ROOT}/.docksal/db/db.sql"

  if [[ ! -f ${local_dump_file} ]]; then
    echo "Error: Database backup not found in ${local_dump_file}."
  fi

  drush @docksal sql-drop -y
  drush @docksal sql-cli < ${local_dump_file}
}

# Fix file/folder permissions
fix_permissions ()
{
	echo "Making site directory writable..."
	chmod 775 "${SITEDIR_PATH}"
}

# Local adjustments
local_settings ()
{
  cd $DOCROOT_PATH
  drush cim -y
}

cd ${PROJECT_ROOT}

fix_permissions

# Check if the vendor directory exists. If not, install dependencies.
if [[ ! -d "vendor" ]]; then
  echo "Install composer..."
  composer install
fi

echo -e "Site install..."
site_install

echo "Applying local dev settings..."
local_settings

echo -en "${green_bg} DONE! ${NC} "
echo -e "Open ${yellow}http://${VIRTUAL_HOST}${NC} in your browser to verify the setup."
