<?php

/**
 * @file
 * Alter node form
 */
use Drupal\Core\Form\FormStateInterface;

function drupal_to_slack_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $type = \Drupal::config('drupal_to_slack.settings')->get('node_to_notify_on_slack');
  if (isset($type)) {
    $filter = array_filter($type);
    if (count($filter) > 1) {
      foreach ($filter as $filter_val) {
        $actual_form_id[$filter_val] = 'node_' . $filter_val . '_form';
        $actual_form_id[$filter_val.'_edit'] = 'node_' . $filter_val . '_edit_form';
      }
    }
    else {
      $type_var = implode('_node_form,', $filter);
      $actual_form_id = array($type_var . '_node_form' => 'node_' . $type_var . '_form');
      $actual_form_id = array($type_var . '_node_form' => 'node_' . $type_var . '_edit_form');
    }
    if (in_array($form_id, $actual_form_id)) {
      foreach (array_keys($form['actions']) as $action) {
        if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
          $form['actions'][$action]['#submit'][] = 'drupal_to_slack_form_submit';
        }
      }
    }
  }
}

/**
 *  Implement custom form submit function
 */
function drupal_to_slack_form_submit(array $form, FormStateInterface $form_state) {
  $nid = $form_state->getValue(array('nid'));
  $node = \Drupal\node\Entity\Node::load($nid);
  global $base_url;
  $user_id = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  $name = $user_id->get('name')->value;
  $type = $node->getType();
  $form_id = $form["#form_id"];
  $title = $node->get('title')->value;
  $node_status = 'created';
  $slack_url = \Drupal::config('drupal_to_slack.settings')->get('drupal_to_slack_incoming_webhook_url');
  $room = \Drupal::config('drupal_to_slack.settings')->get('drupal_to_slack_channel_for_message');
  define('SLACK_WEBHOOK', $slack_url);
  $url = 'node/' . $nid;
  $url_path = $base_url . '/' . $url;
  $notify_node = \Drupal::config('drupal_to_slack.settings')->get('node_to_notify_on_slack');
  if (strpos($form_id, 'edit') !== false) {
    $node_status = 'updated';
  }
  if (in_array('article', $notify_node)) {
    $attachments = array([
        'fallback' => 'Hey! See this message',
        'color' => '#ff6600',
        'fields' => array(
          [
            'title' => 'more info:',
            'value' => $url_path,
            'short' => true
          ],
        ),
    ]);
    $message = "payload=" . json_encode(array(
          'text' => "The content named *" . $title . "* of type *". $type . "* has been *" . $node_status . "* by *" . $name . "*.",
          'username' => $name,
          'channel' => "{$room}",
          "attachments" => $attachments
    ));

    // Use curl to send your message
    $c = curl_init(SLACK_WEBHOOK);
    curl_setopt($c, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($c, CURLOPT_POST, true);
    curl_setopt($c, CURLOPT_POSTFIELDS, $message);
    curl_exec($c);
    curl_close($c);
  }
}
